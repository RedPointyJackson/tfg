#!/usr/bin/env python3

import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import pandas as pd

plt.style.use('custom')


#####################################
#         Get the data              #
#####################################

df = pd.read_csv('ising.data')

df = df[df['t'] != 0]

df['β(1-C)'] = (1-df['C'])/df['T']

def cm2inch(value):
    return value/2.54

fig = plt.figure( figsize=(cm2inch(11), cm2inch(7)) )
ax1 = fig.add_subplot(211)

ax1.axvline(x=4.55, linewidth=1, color='gray')
plt.text(4.525+0.1, 0.005, r'$T_c$', fontsize=15, color='gray')

for t,df in df.groupby('t'):
    ax1.scatter(df['T'], df['β(1-C)'],
                label='%d' % t,
                s = 1)

ax1.set_ylabel("⟨β(1-C)⟩")
ax1.set_xlim(0,10)


ax2 = fig.add_subplot(212)

ax2.axvline(x=4.525, linewidth=1, color='gray')

μdf = df.groupby('T').mean().reset_index()
σdf = df.groupby('T').std().reset_index()

μdf['max'] = μdf['E'] + σdf['E']
μdf['min'] = μdf['E'] - σdf['E']

ax2.fill_between(μdf['T'], μdf['max'], μdf['min'], alpha=0.4)
ax2.plot(μdf['T'], μdf['E'], lw=1)

ax2.set_xlabel('T')
ax2.set_ylabel("⟨E⟩")
ax2.set_xlim(0,10)

plt.savefig('corrplot.pdf', dpi=300)
